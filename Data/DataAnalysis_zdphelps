#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Dec  4 13:04:39 2018

@author: zdphelps
"""

from scipy import integrate
import numpy as np
import matplotlib.pyplot as plt
#Data Analysis
#D = (1/0.7)* integral(1/(sqrt(Om(1+z)^3+On))) from 0 to z
#loop through data
#calculate therotical data
#find kai^2 (x^2=Sum((D-Dth)^2/sig^2))
Data = np.loadtxt("DataAnalysis.txt")
#print(Data)
size = 100
Z = np.array([])
D = np.array([])
Sig = np.array([])
length = len(Data)
Am = np.linspace(0,1,size)
Em = np.linspace(0,10,size)
for i in range(length):
    Z = np.append(Z,Data[i][0])
    D = np.append(D,Data[i][1])
    Sig = np.append(Sig,Data[i][2])
#Integreal Form
#def Dth(z,Om,On):
#    fx = lambda x: 1/np.sqrt(Om*(1+x)**3+On)
#    Dth = (1/0.7)*integrate.quad(fx,0,z)[0]
#    return Dth
def Dth(d,z):
    Dth=1+d*np.exp(-(Z-z)**2)
    return Dth
def Kai2(D,Dth,Sig):
    x2 = np.sum((D-Dth)**2/Sig**2)
    return x2
#for j in range(size):
 #   for k in range(size):
Kai2array = np.zeros((size,size))
Kai2min = 100000
a = 0
b = 0
xmin = 0
ymin = 0
for i in Am:
    b = 0
    for j in Em:
        Kai2array[b][a] = Kai2(Dth(i,j),D,Sig)
        if Kai2array[b][a]<=Kai2min:
            xmin = b
            ymin = a
            Kai2min = Kai2array[b][a]
        
        b+=1
    a+=1

Amin = Am[ymin]
Emin = Em[xmin]

plt.figure(0)
plt.errorbar(Z,D,Sig,fmt=".")
plt.plot(Z,Dth(Amin,Emin))
plt.show()

def Hessian(x,y,arr,i,j):
    dxx = arr[i-1][j]+arr[i+1][j]-2*arr[i][j]/(x[i+1]-x[i])
    dyy = arr[i][j-1]+arr[i][j-1]-2*arr[i][j]/(y[j+1]-y[j])
    dxy = (arr[i+1][j+1]+arr[i-1][j-1]-arr[i+1][j-1]-arr[i-1][j-1])/4*(x[i]-x[i+1])*(y[j]-y[j+1])
    H = np.zeros((2,2))
    H[0][0]=-.5*dxx
    H[1][1]=-.5*dyy
    H[0][1]=-.5*dxy
    H[1][0]=-.5*dxy
    return H
H = Hessian(Em,Am,Kai2array,xmin,ymin)
C=np.linalg.inv(H)
sigmas=np.sqrt(C.diagonal())
print('Hessian Error:',sigmas)
